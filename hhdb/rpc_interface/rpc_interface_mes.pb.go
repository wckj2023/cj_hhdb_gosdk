// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: hhdb/rpc_interface/rpc_interface_mes.proto

package rpc_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	rpc "cj_hhdb_gosdk/hhdb/rpc"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 降采样取值方式
type ResampleMode int32

const (
	ResampleMode_kRmSuggest ResampleMode = 0 //根据压缩方式自动推荐准确的取值模式
	ResampleMode_kRmBefore  ResampleMode = 1 //当前时间点有值，则取该值，无值则取时间点前的第一个值
	ResampleMode_kRmAfter   ResampleMode = 2 //当前时间点有值，则取该值，无值则取时间点后的第一个值
	ResampleMode_kRmInter   ResampleMode = 3 //当前时间点有值，则取该值，无值则取时间点前、后的第一个值后，线性运算得到时间点值
	ResampleMode_kRmNear    ResampleMode = 4 //取当前时间点最近的值
	ResampleMode_kRmNone    ResampleMode = 5 //当前时间点有值，则取该值，无值则返回默认值
)

// Enum value maps for ResampleMode.
var (
	ResampleMode_name = map[int32]string{
		0: "kRmSuggest",
		1: "kRmBefore",
		2: "kRmAfter",
		3: "kRmInter",
		4: "kRmNear",
		5: "kRmNone",
	}
	ResampleMode_value = map[string]int32{
		"kRmSuggest": 0,
		"kRmBefore":  1,
		"kRmAfter":   2,
		"kRmInter":   3,
		"kRmNear":    4,
		"kRmNone":    5,
	}
)

func (x ResampleMode) Enum() *ResampleMode {
	p := new(ResampleMode)
	*p = x
	return p
}

func (x ResampleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResampleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_enumTypes[0].Descriptor()
}

func (ResampleMode) Type() protoreflect.EnumType {
	return &file_hhdb_rpc_interface_rpc_interface_mes_proto_enumTypes[0]
}

func (x ResampleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResampleMode.Descriptor instead.
func (ResampleMode) EnumDescriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{0}
}

// 时间段查询模式
type RangeQueryMode int32

const (
	RangeQueryMode_kRqmAll       RangeQueryMode = 0  //时间段内所有数据
	RangeQueryMode_kRqmMax       RangeQueryMode = 1  //时间段内最大值
	RangeQueryMode_kRqmMin       RangeQueryMode = 2  //时间段内最小值
	RangeQueryMode_kRqmSum       RangeQueryMode = 3  //时间段内和值
	RangeQueryMode_kRqmAvg       RangeQueryMode = 4  //时间段内平均值
	RangeQueryMode_kRqmWeightSum RangeQueryMode = 5  //时间段内加权和值
	RangeQueryMode_kRqmWeightAvg RangeQueryMode = 6  //时间段内加权平均值
	RangeQueryMode_kRqmFirst     RangeQueryMode = 7  //取第一个值
	RangeQueryMode_kRqmLast      RangeQueryMode = 8  //取最后一个值
	RangeQueryMode_kRqmTimeDiff  RangeQueryMode = 9  //取时间段内开始时间点数据-结束时间点数据，若时间点数据不存在则kResSuggest模式进行查询
	RangeQueryMode_kRqmLastDiff  RangeQueryMode = 10 //取时间段内第一条数据-最后一条数据差值
	RangeQueryMode_kRqmMaxDiff   RangeQueryMode = 11 //取时间段内最大值减最小值的差值
	RangeQueryMode_kRqmMse       RangeQueryMode = 12 //均方差
	RangeQueryMode_kRqmMode      RangeQueryMode = 13 //众数
	RangeQueryMode_kRqmRate      RangeQueryMode = 14 //增长率
)

// Enum value maps for RangeQueryMode.
var (
	RangeQueryMode_name = map[int32]string{
		0:  "kRqmAll",
		1:  "kRqmMax",
		2:  "kRqmMin",
		3:  "kRqmSum",
		4:  "kRqmAvg",
		5:  "kRqmWeightSum",
		6:  "kRqmWeightAvg",
		7:  "kRqmFirst",
		8:  "kRqmLast",
		9:  "kRqmTimeDiff",
		10: "kRqmLastDiff",
		11: "kRqmMaxDiff",
		12: "kRqmMse",
		13: "kRqmMode",
		14: "kRqmRate",
	}
	RangeQueryMode_value = map[string]int32{
		"kRqmAll":       0,
		"kRqmMax":       1,
		"kRqmMin":       2,
		"kRqmSum":       3,
		"kRqmAvg":       4,
		"kRqmWeightSum": 5,
		"kRqmWeightAvg": 6,
		"kRqmFirst":     7,
		"kRqmLast":      8,
		"kRqmTimeDiff":  9,
		"kRqmLastDiff":  10,
		"kRqmMaxDiff":   11,
		"kRqmMse":       12,
		"kRqmMode":      13,
		"kRqmRate":      14,
	}
)

func (x RangeQueryMode) Enum() *RangeQueryMode {
	p := new(RangeQueryMode)
	*p = x
	return p
}

func (x RangeQueryMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RangeQueryMode) Descriptor() protoreflect.EnumDescriptor {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_enumTypes[1].Descriptor()
}

func (RangeQueryMode) Type() protoreflect.EnumType {
	return &file_hhdb_rpc_interface_rpc_interface_mes_proto_enumTypes[1]
}

func (x RangeQueryMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RangeQueryMode.Descriptor instead.
func (RangeQueryMode) EnumDescriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{1}
}

// 请求携带的基础信息
type ReqUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //认证token
}

func (x *ReqUserInfo) Reset() {
	*x = ReqUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserInfo) ProtoMessage() {}

func (x *ReqUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserInfo.ProtoReflect.Descriptor instead.
func (*ReqUserInfo) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{0}
}

func (x *ReqUserInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 用户认证接口请求体
type AuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //用户密码，md5加密后的字符串
}

func (x *AuthReq) Reset() {
	*x = AuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthReq) ProtoMessage() {}

func (x *AuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthReq.ProtoReflect.Descriptor instead.
func (*AuthReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{1}
}

func (x *AuthReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 用户认证接口响应
type AuthReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg   *rpc.ErrMsg  `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg,omitempty"`     //错误码
	UserInfo *ReqUserInfo `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"` //用户ID和认证token
}

func (x *AuthReply) Reset() {
	*x = AuthReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthReply) ProtoMessage() {}

func (x *AuthReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthReply.ProtoReflect.Descriptor instead.
func (*AuthReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{2}
}

func (x *AuthReply) GetErrMsg() *rpc.ErrMsg {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *AuthReply) GetUserInfo() *ReqUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// 通用的请求体
type CommonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg          *rpc.ErrMsg `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg,omitempty"`                           //错误码
	IdOrErrCodeList []int32     `protobuf:"varint,2,rep,packed,name=idOrErrCodeList,proto3" json:"idOrErrCodeList,omitempty"` //批量操作的各个结果值
}

func (x *CommonReply) Reset() {
	*x = CommonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReply) ProtoMessage() {}

func (x *CommonReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReply.ProtoReflect.Descriptor instead.
func (*CommonReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{3}
}

func (x *CommonReply) GetErrMsg() *rpc.ErrMsg {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *CommonReply) GetIdOrErrCodeList() []int32 {
	if x != nil {
		return x.IdOrErrCodeList
	}
	return nil
}

type QueryErrMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCodeList []int32 `protobuf:"varint,1,rep,packed,name=errCodeList,proto3" json:"errCodeList,omitempty"` //错误码
}

func (x *QueryErrMsgReq) Reset() {
	*x = QueryErrMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryErrMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryErrMsgReq) ProtoMessage() {}

func (x *QueryErrMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryErrMsgReq.ProtoReflect.Descriptor instead.
func (*QueryErrMsgReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{4}
}

func (x *QueryErrMsgReq) GetErrCodeList() []int32 {
	if x != nil {
		return x.ErrCodeList
	}
	return nil
}

type QueryErrMsgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsgList []string `protobuf:"bytes,1,rep,name=errMsgList,proto3" json:"errMsgList,omitempty"` //错误码对应信息
}

func (x *QueryErrMsgReply) Reset() {
	*x = QueryErrMsgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryErrMsgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryErrMsgReply) ProtoMessage() {}

func (x *QueryErrMsgReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryErrMsgReply.ProtoReflect.Descriptor instead.
func (*QueryErrMsgReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{5}
}

func (x *QueryErrMsgReply) GetErrMsgList() []string {
	if x != nil {
		return x.ErrMsgList
	}
	return nil
}

type QueryTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId    int32  `protobuf:"varint,1,opt,name=tableId,proto3" json:"tableId,omitempty"`       //表ID，<0时，则使用group_name进行模糊匹配
	TableName  string `protobuf:"bytes,2,opt,name=tableName,proto3" json:"tableName,omitempty"`    //点组名，点组ID<0且grou_name为空时,查询全部点组列表
	EnablePage bool   `protobuf:"varint,3,opt,name=enablePage,proto3" json:"enablePage,omitempty"` //是否启用分页
	Page       uint32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`             //页数,page从0开始计数
	Limit      uint32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`           //每页的数量
}

func (x *QueryTableReq) Reset() {
	*x = QueryTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTableReq) ProtoMessage() {}

func (x *QueryTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTableReq.ProtoReflect.Descriptor instead.
func (*QueryTableReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{6}
}

func (x *QueryTableReq) GetTableId() int32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *QueryTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *QueryTableReq) GetEnablePage() bool {
	if x != nil {
		return x.EnablePage
	}
	return false
}

func (x *QueryTableReq) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryTableReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 获取点组响应
type QueryTableReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg        *rpc.ErrMsg      `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg,omitempty"`               //错误码
	TableInfoList []*rpc.TableInfo `protobuf:"bytes,2,rep,name=tableInfoList,proto3" json:"tableInfoList,omitempty"` //点表信息列表
}

func (x *QueryTableReply) Reset() {
	*x = QueryTableReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTableReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTableReply) ProtoMessage() {}

func (x *QueryTableReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTableReply.ProtoReflect.Descriptor instead.
func (*QueryTableReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{7}
}

func (x *QueryTableReply) GetErrMsg() *rpc.ErrMsg {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *QueryTableReply) GetTableInfoList() []*rpc.TableInfo {
	if x != nil {
		return x.TableInfoList
	}
	return nil
}

// 测点信息列表请求体
type PointInfoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointInfoList []*rpc.PointInfo `protobuf:"bytes,1,rep,name=pointInfoList,proto3" json:"pointInfoList,omitempty"`
}

func (x *PointInfoListReq) Reset() {
	*x = PointInfoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointInfoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointInfoListReq) ProtoMessage() {}

func (x *PointInfoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointInfoListReq.ProtoReflect.Descriptor instead.
func (*PointInfoListReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{8}
}

func (x *PointInfoListReq) GetPointInfoList() []*rpc.PointInfo {
	if x != nil {
		return x.PointInfoList
	}
	return nil
}

// 查询测点请求
type QueryPointInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId     int32             `protobuf:"varint,1,opt,name=tableId,proto3" json:"tableId,omitempty"`                                                                                                //<0时，整库查询，>=0时在指定表内检索
	PointId     int32             `protobuf:"varint,2,opt,name=pointId,proto3" json:"pointId,omitempty"`                                                                                                //测点ID，>=0时，查询指定测点ID的信息
	NameRegex   string            `protobuf:"bytes,3,opt,name=nameRegex,proto3" json:"nameRegex,omitempty"`                                                                                             //不为空时，按正则匹配点名符合的测点
	DescRegex   string            `protobuf:"bytes,4,opt,name=descRegex,proto3" json:"descRegex,omitempty"`                                                                                             //不为空时，按正则匹配描述符合的测点，两则都不为空时取交集
	UnitRegex   string            `protobuf:"bytes,5,opt,name=unitRegex,proto3" json:"unitRegex,omitempty"`                                                                                             //不为空时，按正则匹配
	PointType   int32             `protobuf:"varint,6,opt,name=pointType,proto3" json:"pointType,omitempty"`                                                                                            //测点类型，>=0时，查询指定测点类型的信息
	ExtraFields map[string]string `protobuf:"bytes,7,rep,name=extraFields,proto3" json:"extraFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //需要检索的字段，key为字段名，value为检索的字段值
	EnablePage  bool              `protobuf:"varint,8,opt,name=enablePage,proto3" json:"enablePage,omitempty"`                                                                                          //是否启用分页
	Page        uint32            `protobuf:"varint,9,opt,name=page,proto3" json:"page,omitempty"`                                                                                                      //页数,page从0开始计数
	Limit       uint32            `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`                                                                                                   //每页的数量
}

func (x *QueryPointInfoReq) Reset() {
	*x = QueryPointInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPointInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPointInfoReq) ProtoMessage() {}

func (x *QueryPointInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPointInfoReq.ProtoReflect.Descriptor instead.
func (*QueryPointInfoReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{9}
}

func (x *QueryPointInfoReq) GetTableId() int32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *QueryPointInfoReq) GetPointId() int32 {
	if x != nil {
		return x.PointId
	}
	return 0
}

func (x *QueryPointInfoReq) GetNameRegex() string {
	if x != nil {
		return x.NameRegex
	}
	return ""
}

func (x *QueryPointInfoReq) GetDescRegex() string {
	if x != nil {
		return x.DescRegex
	}
	return ""
}

func (x *QueryPointInfoReq) GetUnitRegex() string {
	if x != nil {
		return x.UnitRegex
	}
	return ""
}

func (x *QueryPointInfoReq) GetPointType() int32 {
	if x != nil {
		return x.PointType
	}
	return 0
}

func (x *QueryPointInfoReq) GetExtraFields() map[string]string {
	if x != nil {
		return x.ExtraFields
	}
	return nil
}

func (x *QueryPointInfoReq) GetEnablePage() bool {
	if x != nil {
		return x.EnablePage
	}
	return false
}

func (x *QueryPointInfoReq) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryPointInfoReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 查询测点响应
type QueryPointInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg        *rpc.ErrMsg      `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg,omitempty"`               //错误码
	PointInfoList []*rpc.PointInfo `protobuf:"bytes,2,rep,name=pointInfoList,proto3" json:"pointInfoList,omitempty"` //查询获取到的测点信息
}

func (x *QueryPointInfoReply) Reset() {
	*x = QueryPointInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPointInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPointInfoReply) ProtoMessage() {}

func (x *QueryPointInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPointInfoReply.ProtoReflect.Descriptor instead.
func (*QueryPointInfoReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{10}
}

func (x *QueryPointInfoReply) GetErrMsg() *rpc.ErrMsg {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *QueryPointInfoReply) GetPointInfoList() []*rpc.PointInfo {
	if x != nil {
		return x.PointInfoList
	}
	return nil
}

// 测点ID列表请求体
type IdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []int32 `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"` //id的请求列表
}

func (x *IdList) Reset() {
	*x = IdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdList) ProtoMessage() {}

func (x *IdList) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdList.ProtoReflect.Descriptor instead.
func (*IdList) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{11}
}

func (x *IdList) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

// 测点名列表请求体
type NameList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameList []string `protobuf:"bytes,1,rep,name=nameList,proto3" json:"nameList,omitempty"` //name的请求列表
}

func (x *NameList) Reset() {
	*x = NameList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameList) ProtoMessage() {}

func (x *NameList) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameList.ProtoReflect.Descriptor instead.
func (*NameList) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{12}
}

func (x *NameList) GetNameList() []string {
	if x != nil {
		return x.NameList
	}
	return nil
}

// 测点名列表请求体
type ValueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueList []*rpc.PointValue `protobuf:"bytes,1,rep,name=valueList,proto3" json:"valueList,omitempty"` //测点值列表
}

func (x *ValueList) Reset() {
	*x = ValueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueList) ProtoMessage() {}

func (x *ValueList) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueList.ProtoReflect.Descriptor instead.
func (*ValueList) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{13}
}

func (x *ValueList) GetValueList() []*rpc.PointValue {
	if x != nil {
		return x.ValueList
	}
	return nil
}

type QueryPointIdListByNameListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg *rpc.ErrMsg `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg,omitempty"`         //错误码
	IdList []int32     `protobuf:"varint,2,rep,packed,name=idList,proto3" json:"idList,omitempty"` //id的请求列表
}

func (x *QueryPointIdListByNameListReply) Reset() {
	*x = QueryPointIdListByNameListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPointIdListByNameListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPointIdListByNameListReply) ProtoMessage() {}

func (x *QueryPointIdListByNameListReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPointIdListByNameListReply.ProtoReflect.Descriptor instead.
func (*QueryPointIdListByNameListReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{14}
}

func (x *QueryPointIdListByNameListReply) GetErrMsg() *rpc.ErrMsg {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *QueryPointIdListByNameListReply) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

// 数据列表的响应
type ValueListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg     *rpc.ErrMsg       `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg,omitempty"`                 //错误码
	ValueList  []*rpc.PointValue `protobuf:"bytes,2,rep,name=valueList,proto3" json:"valueList,omitempty"`           //测点值列表
	ResultList []int32           `protobuf:"varint,3,rep,packed,name=resultList,proto3" json:"resultList,omitempty"` //批量操作的各个结果值
}

func (x *ValueListReply) Reset() {
	*x = ValueListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueListReply) ProtoMessage() {}

func (x *ValueListReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueListReply.ProtoReflect.Descriptor instead.
func (*ValueListReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{15}
}

func (x *ValueListReply) GetErrMsg() *rpc.ErrMsg {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *ValueListReply) GetValueList() []*rpc.PointValue {
	if x != nil {
		return x.ValueList
	}
	return nil
}

func (x *ValueListReply) GetResultList() []int32 {
	if x != nil {
		return x.ResultList
	}
	return nil
}

type QueryRealtimeValueListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList   []int32  `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"` //测点ID列表，为空时使用nameList进行写入
	NameList []string `protobuf:"bytes,2,rep,name=nameList,proto3" json:"nameList,omitempty"`     //测点名列表
}

func (x *QueryRealtimeValueListReq) Reset() {
	*x = QueryRealtimeValueListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRealtimeValueListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRealtimeValueListReq) ProtoMessage() {}

func (x *QueryRealtimeValueListReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRealtimeValueListReq.ProtoReflect.Descriptor instead.
func (*QueryRealtimeValueListReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{16}
}

func (x *QueryRealtimeValueListReq) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *QueryRealtimeValueListReq) GetNameList() []string {
	if x != nil {
		return x.NameList
	}
	return nil
}

// 通过测点ID写入测点数据请求体
type UpdateRealtimeValueListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList            []int32           `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"`                //测点ID列表，为空时使用nameList进行写入
	NameList          []string          `protobuf:"bytes,2,rep,name=nameList,proto3" json:"nameList,omitempty"`                    //测点名列表
	ValueList         []*rpc.PointValue `protobuf:"bytes,3,rep,name=valueList,proto3" json:"valueList,omitempty"`                  //对应的测点值列表，与测点ID的下标一一对应
	UseServerTimeFlag bool              `protobuf:"varint,4,opt,name=useServerTimeFlag,proto3" json:"useServerTimeFlag,omitempty"` //是否使用服务器的系统时间,为true则不用valueList中的时间
}

func (x *UpdateRealtimeValueListReq) Reset() {
	*x = UpdateRealtimeValueListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRealtimeValueListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRealtimeValueListReq) ProtoMessage() {}

func (x *UpdateRealtimeValueListReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRealtimeValueListReq.ProtoReflect.Descriptor instead.
func (*UpdateRealtimeValueListReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateRealtimeValueListReq) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *UpdateRealtimeValueListReq) GetNameList() []string {
	if x != nil {
		return x.NameList
	}
	return nil
}

func (x *UpdateRealtimeValueListReq) GetValueList() []*rpc.PointValue {
	if x != nil {
		return x.ValueList
	}
	return nil
}

func (x *UpdateRealtimeValueListReq) GetUseServerTimeFlag() bool {
	if x != nil {
		return x.UseServerTimeFlag
	}
	return false
}

// 通过测点ID获取时间范围内的历史值
type QueryHisRangeValueListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList      []int32        `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"`                                       //测点ID列表，为空时使用nameList进行写入
	NameList    []string       `protobuf:"bytes,2,rep,name=nameList,proto3" json:"nameList,omitempty"`                                           //测点名列表
	StartMstime uint64         `protobuf:"varint,3,opt,name=startMstime,proto3" json:"startMstime,omitempty"`                                    //查询开始时间，单位毫秒
	EndMstime   uint64         `protobuf:"varint,4,opt,name=endMstime,proto3" json:"endMstime,omitempty"`                                        //查询结束时间，单位毫秒
	QueryMode   RangeQueryMode `protobuf:"varint,5,opt,name=queryMode,proto3,enum=hhdb.rpc_interface.RangeQueryMode" json:"queryMode,omitempty"` //历史查询模式
}

func (x *QueryHisRangeValueListReq) Reset() {
	*x = QueryHisRangeValueListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHisRangeValueListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHisRangeValueListReq) ProtoMessage() {}

func (x *QueryHisRangeValueListReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHisRangeValueListReq.ProtoReflect.Descriptor instead.
func (*QueryHisRangeValueListReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{18}
}

func (x *QueryHisRangeValueListReq) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *QueryHisRangeValueListReq) GetNameList() []string {
	if x != nil {
		return x.NameList
	}
	return nil
}

func (x *QueryHisRangeValueListReq) GetStartMstime() uint64 {
	if x != nil {
		return x.StartMstime
	}
	return 0
}

func (x *QueryHisRangeValueListReq) GetEndMstime() uint64 {
	if x != nil {
		return x.EndMstime
	}
	return 0
}

func (x *QueryHisRangeValueListReq) GetQueryMode() RangeQueryMode {
	if x != nil {
		return x.QueryMode
	}
	return RangeQueryMode_kRqmAll
}

type QueryHisValueListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg     *rpc.ErrMsg  `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg,omitempty"`                 //错误码
	ValueLists []*ValueList `protobuf:"bytes,2,rep,name=valueLists,proto3" json:"valueLists,omitempty"`         //测点值列表
	ResultList []int32      `protobuf:"varint,3,rep,packed,name=resultList,proto3" json:"resultList,omitempty"` //批量操作的各个结果值
}

func (x *QueryHisValueListReply) Reset() {
	*x = QueryHisValueListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHisValueListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHisValueListReply) ProtoMessage() {}

func (x *QueryHisValueListReply) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHisValueListReply.ProtoReflect.Descriptor instead.
func (*QueryHisValueListReply) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{19}
}

func (x *QueryHisValueListReply) GetErrMsg() *rpc.ErrMsg {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *QueryHisValueListReply) GetValueLists() []*ValueList {
	if x != nil {
		return x.ValueLists
	}
	return nil
}

func (x *QueryHisValueListReply) GetResultList() []int32 {
	if x != nil {
		return x.ResultList
	}
	return nil
}

// 获取重采样的数据
type QueryHisResamplesValueListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList       []int32      `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"`                                           //测点ID列表，为空时使用nameList进行写入
	NameList     []string     `protobuf:"bytes,2,rep,name=nameList,proto3" json:"nameList,omitempty"`                                               //测点名列表
	StartMstime  uint64       `protobuf:"varint,3,opt,name=startMstime,proto3" json:"startMstime,omitempty"`                                        //查询开始时间，单位毫秒
	EndMstime    uint64       `protobuf:"varint,4,opt,name=endMstime,proto3" json:"endMstime,omitempty"`                                            //查询结束时间，单位毫秒
	PriodMs      uint64       `protobuf:"varint,5,opt,name=priodMs,proto3" json:"priodMs,omitempty"`                                                //重采样的毫秒间隔，代表多长时间返回一个时间点，为0时只返回开始时间点和结束时间点的数据
	ResampleMode ResampleMode `protobuf:"varint,6,opt,name=resampleMode,proto3,enum=hhdb.rpc_interface.ResampleMode" json:"resampleMode,omitempty"` //重采样的运算模式
}

func (x *QueryHisResamplesValueListReq) Reset() {
	*x = QueryHisResamplesValueListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHisResamplesValueListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHisResamplesValueListReq) ProtoMessage() {}

func (x *QueryHisResamplesValueListReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHisResamplesValueListReq.ProtoReflect.Descriptor instead.
func (*QueryHisResamplesValueListReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{20}
}

func (x *QueryHisResamplesValueListReq) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *QueryHisResamplesValueListReq) GetNameList() []string {
	if x != nil {
		return x.NameList
	}
	return nil
}

func (x *QueryHisResamplesValueListReq) GetStartMstime() uint64 {
	if x != nil {
		return x.StartMstime
	}
	return 0
}

func (x *QueryHisResamplesValueListReq) GetEndMstime() uint64 {
	if x != nil {
		return x.EndMstime
	}
	return 0
}

func (x *QueryHisResamplesValueListReq) GetPriodMs() uint64 {
	if x != nil {
		return x.PriodMs
	}
	return 0
}

func (x *QueryHisResamplesValueListReq) GetResampleMode() ResampleMode {
	if x != nil {
		return x.ResampleMode
	}
	return ResampleMode_kRmSuggest
}

type InsertHisValueListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList     []int32      `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"` //测点ID列表，为空时使用nameList进行写入
	NameList   []string     `protobuf:"bytes,2,rep,name=nameList,proto3" json:"nameList,omitempty"`     //测点名列表
	ValueLists []*ValueList `protobuf:"bytes,3,rep,name=valueLists,proto3" json:"valueLists,omitempty"` //测点值列表
}

func (x *InsertHisValueListReq) Reset() {
	*x = InsertHisValueListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertHisValueListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertHisValueListReq) ProtoMessage() {}

func (x *InsertHisValueListReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertHisValueListReq.ProtoReflect.Descriptor instead.
func (*InsertHisValueListReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{21}
}

func (x *InsertHisValueListReq) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *InsertHisValueListReq) GetNameList() []string {
	if x != nil {
		return x.NameList
	}
	return nil
}

func (x *InsertHisValueListReq) GetValueLists() []*ValueList {
	if x != nil {
		return x.ValueLists
	}
	return nil
}

// 通过测点ID获取历史时间点值
type QueryHisTimePointValueListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList       []int32      `protobuf:"varint,1,rep,packed,name=idList,proto3" json:"idList,omitempty"`                                           //测点ID列表，为空时使用nameList进行写入
	NameList     []string     `protobuf:"bytes,2,rep,name=nameList,proto3" json:"nameList,omitempty"`                                               //测点名列表
	MsTimePoint  uint64       `protobuf:"varint,3,opt,name=msTimePoint,proto3" json:"msTimePoint,omitempty"`                                        //查询开始时间，单位毫秒
	ResampleMode ResampleMode `protobuf:"varint,4,opt,name=resampleMode,proto3,enum=hhdb.rpc_interface.ResampleMode" json:"resampleMode,omitempty"` //重采样的运算模式
}

func (x *QueryHisTimePointValueListReq) Reset() {
	*x = QueryHisTimePointValueListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHisTimePointValueListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHisTimePointValueListReq) ProtoMessage() {}

func (x *QueryHisTimePointValueListReq) ProtoReflect() protoreflect.Message {
	mi := &file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHisTimePointValueListReq.ProtoReflect.Descriptor instead.
func (*QueryHisTimePointValueListReq) Descriptor() ([]byte, []int) {
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP(), []int{22}
}

func (x *QueryHisTimePointValueListReq) GetIdList() []int32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *QueryHisTimePointValueListReq) GetNameList() []string {
	if x != nil {
		return x.NameList
	}
	return nil
}

func (x *QueryHisTimePointValueListReq) GetMsTimePoint() uint64 {
	if x != nil {
		return x.MsTimePoint
	}
	return 0
}

func (x *QueryHisTimePointValueListReq) GetResampleMode() ResampleMode {
	if x != nil {
		return x.ResampleMode
	}
	return ResampleMode_kRmSuggest
}

var File_hhdb_rpc_interface_rpc_interface_mes_proto protoreflect.FileDescriptor

var file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x68, 0x68, 0x64, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x68, 0x68,
	0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x1a, 0x18, 0x68, 0x68, 0x64, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x68, 0x68, 0x64, 0x62,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x41, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x72, 0x0a, 0x09, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x3b, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x61,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x64, 0x4f, 0x72, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0f, 0x69, 0x64, 0x4f, 0x72, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x32, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x76, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x28, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x0d, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x10, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0d, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x03, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x73, 0x63, 0x52, 0x65, 0x67, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x73, 0x63, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x67, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x68,
	0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0x3e, 0x0a, 0x10, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a, 0x0a, 0x13, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x0d, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x06, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x3f, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x63, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x68, 0x64, 0x62,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x73, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xd1, 0x01,
	0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x40, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68,
	0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x68, 0x64,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf3, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x69, 0x6f, 0x64, 0x4d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x72,
	0x69, 0x6f, 0x64, 0x4d, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x68, 0x68,
	0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x15,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x44, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70,
	0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2a, 0x63, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x52, 0x6d, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x52, 0x6d, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x52, 0x6d, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x52, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x52, 0x6d, 0x4e, 0x65, 0x61, 0x72, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x6b, 0x52, 0x6d, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x05, 0x2a, 0xf2, 0x01, 0x0a, 0x0e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x6b, 0x52, 0x71, 0x6d, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x6b,
	0x52, 0x71, 0x6d, 0x4d, 0x61, 0x78, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x52, 0x71, 0x6d,
	0x4d, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x52, 0x71, 0x6d, 0x53, 0x75, 0x6d,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x52, 0x71, 0x6d, 0x41, 0x76, 0x67, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x6b, 0x52, 0x71, 0x6d, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x6d,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x52, 0x71, 0x6d, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x41, 0x76, 0x67, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x52, 0x71, 0x6d, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x52, 0x71, 0x6d, 0x4c, 0x61, 0x73, 0x74,
	0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x52, 0x71, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69,
	0x66, 0x66, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x52, 0x71, 0x6d, 0x4c, 0x61, 0x73, 0x74,
	0x44, 0x69, 0x66, 0x66, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x52, 0x71, 0x6d, 0x4d, 0x61,
	0x78, 0x44, 0x69, 0x66, 0x66, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x52, 0x71, 0x6d, 0x4d,
	0x73, 0x65, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x52, 0x71, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x10, 0x0d, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x52, 0x71, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x10, 0x0e,
	0x42, 0x14, 0x5a, 0x12, 0x68, 0x68, 0x64, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescOnce sync.Once
	file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescData = file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDesc
)

func file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescGZIP() []byte {
	file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescOnce.Do(func() {
		file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescData = protoimpl.X.CompressGZIP(file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescData)
	})
	return file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDescData
}

var file_hhdb_rpc_interface_rpc_interface_mes_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_hhdb_rpc_interface_rpc_interface_mes_proto_goTypes = []interface{}{
	(ResampleMode)(0),                       // 0: hhdb.rpc_interface.ResampleMode
	(RangeQueryMode)(0),                     // 1: hhdb.rpc_interface.RangeQueryMode
	(*ReqUserInfo)(nil),                     // 2: hhdb.rpc_interface.ReqUserInfo
	(*AuthReq)(nil),                         // 3: hhdb.rpc_interface.AuthReq
	(*AuthReply)(nil),                       // 4: hhdb.rpc_interface.AuthReply
	(*CommonReply)(nil),                     // 5: hhdb.rpc_interface.CommonReply
	(*QueryErrMsgReq)(nil),                  // 6: hhdb.rpc_interface.QueryErrMsgReq
	(*QueryErrMsgReply)(nil),                // 7: hhdb.rpc_interface.QueryErrMsgReply
	(*QueryTableReq)(nil),                   // 8: hhdb.rpc_interface.QueryTableReq
	(*QueryTableReply)(nil),                 // 9: hhdb.rpc_interface.QueryTableReply
	(*PointInfoListReq)(nil),                // 10: hhdb.rpc_interface.PointInfoListReq
	(*QueryPointInfoReq)(nil),               // 11: hhdb.rpc_interface.QueryPointInfoReq
	(*QueryPointInfoReply)(nil),             // 12: hhdb.rpc_interface.QueryPointInfoReply
	(*IdList)(nil),                          // 13: hhdb.rpc_interface.IdList
	(*NameList)(nil),                        // 14: hhdb.rpc_interface.NameList
	(*ValueList)(nil),                       // 15: hhdb.rpc_interface.ValueList
	(*QueryPointIdListByNameListReply)(nil), // 16: hhdb.rpc_interface.QueryPointIdListByNameListReply
	(*ValueListReply)(nil),                  // 17: hhdb.rpc_interface.ValueListReply
	(*QueryRealtimeValueListReq)(nil),       // 18: hhdb.rpc_interface.QueryRealtimeValueListReq
	(*UpdateRealtimeValueListReq)(nil),      // 19: hhdb.rpc_interface.UpdateRealtimeValueListReq
	(*QueryHisRangeValueListReq)(nil),       // 20: hhdb.rpc_interface.QueryHisRangeValueListReq
	(*QueryHisValueListReply)(nil),          // 21: hhdb.rpc_interface.QueryHisValueListReply
	(*QueryHisResamplesValueListReq)(nil),   // 22: hhdb.rpc_interface.QueryHisResamplesValueListReq
	(*InsertHisValueListReq)(nil),           // 23: hhdb.rpc_interface.InsertHisValueListReq
	(*QueryHisTimePointValueListReq)(nil),   // 24: hhdb.rpc_interface.QueryHisTimePointValueListReq
	nil,                                     // 25: hhdb.rpc_interface.QueryPointInfoReq.ExtraFieldsEntry
	(*rpc.ErrMsg)(nil),                      // 26: hhdb.rpc.ErrMsg
	(*rpc.TableInfo)(nil),                   // 27: hhdb.rpc.TableInfo
	(*rpc.PointInfo)(nil),                   // 28: hhdb.rpc.PointInfo
	(*rpc.PointValue)(nil),                  // 29: hhdb.rpc.PointValue
}
var file_hhdb_rpc_interface_rpc_interface_mes_proto_depIdxs = []int32{
	26, // 0: hhdb.rpc_interface.AuthReply.errMsg:type_name -> hhdb.rpc.ErrMsg
	2,  // 1: hhdb.rpc_interface.AuthReply.userInfo:type_name -> hhdb.rpc_interface.ReqUserInfo
	26, // 2: hhdb.rpc_interface.CommonReply.errMsg:type_name -> hhdb.rpc.ErrMsg
	26, // 3: hhdb.rpc_interface.QueryTableReply.errMsg:type_name -> hhdb.rpc.ErrMsg
	27, // 4: hhdb.rpc_interface.QueryTableReply.tableInfoList:type_name -> hhdb.rpc.TableInfo
	28, // 5: hhdb.rpc_interface.PointInfoListReq.pointInfoList:type_name -> hhdb.rpc.PointInfo
	25, // 6: hhdb.rpc_interface.QueryPointInfoReq.extraFields:type_name -> hhdb.rpc_interface.QueryPointInfoReq.ExtraFieldsEntry
	26, // 7: hhdb.rpc_interface.QueryPointInfoReply.errMsg:type_name -> hhdb.rpc.ErrMsg
	28, // 8: hhdb.rpc_interface.QueryPointInfoReply.pointInfoList:type_name -> hhdb.rpc.PointInfo
	29, // 9: hhdb.rpc_interface.ValueList.valueList:type_name -> hhdb.rpc.PointValue
	26, // 10: hhdb.rpc_interface.QueryPointIdListByNameListReply.errMsg:type_name -> hhdb.rpc.ErrMsg
	26, // 11: hhdb.rpc_interface.ValueListReply.errMsg:type_name -> hhdb.rpc.ErrMsg
	29, // 12: hhdb.rpc_interface.ValueListReply.valueList:type_name -> hhdb.rpc.PointValue
	29, // 13: hhdb.rpc_interface.UpdateRealtimeValueListReq.valueList:type_name -> hhdb.rpc.PointValue
	1,  // 14: hhdb.rpc_interface.QueryHisRangeValueListReq.queryMode:type_name -> hhdb.rpc_interface.RangeQueryMode
	26, // 15: hhdb.rpc_interface.QueryHisValueListReply.errMsg:type_name -> hhdb.rpc.ErrMsg
	15, // 16: hhdb.rpc_interface.QueryHisValueListReply.valueLists:type_name -> hhdb.rpc_interface.ValueList
	0,  // 17: hhdb.rpc_interface.QueryHisResamplesValueListReq.resampleMode:type_name -> hhdb.rpc_interface.ResampleMode
	15, // 18: hhdb.rpc_interface.InsertHisValueListReq.valueLists:type_name -> hhdb.rpc_interface.ValueList
	0,  // 19: hhdb.rpc_interface.QueryHisTimePointValueListReq.resampleMode:type_name -> hhdb.rpc_interface.ResampleMode
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_hhdb_rpc_interface_rpc_interface_mes_proto_init() }
func file_hhdb_rpc_interface_rpc_interface_mes_proto_init() {
	if File_hhdb_rpc_interface_rpc_interface_mes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryErrMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryErrMsgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTableReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointInfoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPointInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPointInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPointIdListByNameListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRealtimeValueListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRealtimeValueListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHisRangeValueListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHisValueListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHisResamplesValueListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertHisValueListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHisTimePointValueListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hhdb_rpc_interface_rpc_interface_mes_proto_goTypes,
		DependencyIndexes: file_hhdb_rpc_interface_rpc_interface_mes_proto_depIdxs,
		EnumInfos:         file_hhdb_rpc_interface_rpc_interface_mes_proto_enumTypes,
		MessageInfos:      file_hhdb_rpc_interface_rpc_interface_mes_proto_msgTypes,
	}.Build()
	File_hhdb_rpc_interface_rpc_interface_mes_proto = out.File
	file_hhdb_rpc_interface_rpc_interface_mes_proto_rawDesc = nil
	file_hhdb_rpc_interface_rpc_interface_mes_proto_goTypes = nil
	file_hhdb_rpc_interface_rpc_interface_mes_proto_depIdxs = nil
}
