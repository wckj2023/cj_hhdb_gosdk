// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: hhdb/rpc_interface/rpc_interface.proto

package rpc_interface

import (
	rpc "github.com/wckj2023/cj_hhdb_gosdk/hhdb/rpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_hhdb_rpc_interface_rpc_interface_proto protoreflect.FileDescriptor

var file_hhdb_rpc_interface_rpc_interface_proto_rawDesc = []byte{
	0x0a, 0x26, 0x68, 0x68, 0x64, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72,
	0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0x18, 0x68, 0x68,
	0x64, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x68, 0x68, 0x64, 0x62, 0x2f, 0x72, 0x70, 0x63,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x32, 0xe0, 0x0e, 0x0a, 0x0c, 0x52, 0x70, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1b, 0x2e, 0x68, 0x68,
	0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e,
	0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x57, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70,
	0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x68, 0x68, 0x64,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x43, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x13, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x13, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70,
	0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x68, 0x68, 0x64,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x68, 0x68, 0x64,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x1f, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x58, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x68, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x68, 0x68, 0x64,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x55, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x68, 0x64,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e,
	0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x55, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x24, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x68,
	0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6f, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x68,
	0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x68, 0x68,
	0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x6b, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x68, 0x68, 0x64,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x68, 0x68, 0x64, 0x62,
	0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x73, 0x0a,
	0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72,
	0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70,
	0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x7a, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x52, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x31, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x73,
	0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x68,
	0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x60, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x68, 0x68, 0x64, 0x62,
	0x2e, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x68, 0x64, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x63, 0x6b, 0x6a, 0x32, 0x30, 0x32, 0x33, 0x2f, 0x63, 0x6a, 0x5f,
	0x68, 0x68, 0x64, 0x62, 0x5f, 0x67, 0x6f, 0x73, 0x64, 0x6b, 0x2f, 0x68, 0x68, 0x64, 0x62, 0x2f,
	0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_hhdb_rpc_interface_rpc_interface_proto_goTypes = []interface{}{
	(*AuthReq)(nil),                         // 0: hhdb.rpc_interface.AuthReq
	(*QueryErrMsgReq)(nil),                  // 1: hhdb.rpc_interface.QueryErrMsgReq
	(*rpc.TableInfo)(nil),                   // 2: hhdb.rpc.TableInfo
	(*QueryTableReq)(nil),                   // 3: hhdb.rpc_interface.QueryTableReq
	(*QueryPointCountReq)(nil),              // 4: hhdb.rpc_interface.QueryPointCountReq
	(*PointInfoListReq)(nil),                // 5: hhdb.rpc_interface.PointInfoListReq
	(*QueryPointInfoReq)(nil),               // 6: hhdb.rpc_interface.QueryPointInfoReq
	(*NameList)(nil),                        // 7: hhdb.rpc_interface.NameList
	(*QueryRealtimeValueListReq)(nil),       // 8: hhdb.rpc_interface.QueryRealtimeValueListReq
	(*UpdateRealtimeValueListReq)(nil),      // 9: hhdb.rpc_interface.UpdateRealtimeValueListReq
	(*QueryHisRangeValueListReq)(nil),       // 10: hhdb.rpc_interface.QueryHisRangeValueListReq
	(*QueryHisResamplesValueListReq)(nil),   // 11: hhdb.rpc_interface.QueryHisResamplesValueListReq
	(*QueryHisTimePointValueListReq)(nil),   // 12: hhdb.rpc_interface.QueryHisTimePointValueListReq
	(*InsertHisValueListReq)(nil),           // 13: hhdb.rpc_interface.InsertHisValueListReq
	(*AuthReply)(nil),                       // 14: hhdb.rpc_interface.AuthReply
	(*QueryErrMsgReply)(nil),                // 15: hhdb.rpc_interface.QueryErrMsgReply
	(*CommonReply)(nil),                     // 16: hhdb.rpc_interface.CommonReply
	(*QueryTableReply)(nil),                 // 17: hhdb.rpc_interface.QueryTableReply
	(*QueryPointCountReply)(nil),            // 18: hhdb.rpc_interface.QueryPointCountReply
	(*QueryPointInfoReply)(nil),             // 19: hhdb.rpc_interface.QueryPointInfoReply
	(*QueryPointIdListByNameListReply)(nil), // 20: hhdb.rpc_interface.QueryPointIdListByNameListReply
	(*ValueListReply)(nil),                  // 21: hhdb.rpc_interface.ValueListReply
	(*QueryHisValueListReply)(nil),          // 22: hhdb.rpc_interface.QueryHisValueListReply
}
var file_hhdb_rpc_interface_rpc_interface_proto_depIdxs = []int32{
	0,  // 0: hhdb.rpc_interface.RpcInterface.Auth:input_type -> hhdb.rpc_interface.AuthReq
	1,  // 1: hhdb.rpc_interface.RpcInterface.QueryErrMsg:input_type -> hhdb.rpc_interface.QueryErrMsgReq
	2,  // 2: hhdb.rpc_interface.RpcInterface.InsertTable:input_type -> hhdb.rpc.TableInfo
	2,  // 3: hhdb.rpc_interface.RpcInterface.DelTable:input_type -> hhdb.rpc.TableInfo
	2,  // 4: hhdb.rpc_interface.RpcInterface.ClearTable:input_type -> hhdb.rpc.TableInfo
	2,  // 5: hhdb.rpc_interface.RpcInterface.UpdateTable:input_type -> hhdb.rpc.TableInfo
	3,  // 6: hhdb.rpc_interface.RpcInterface.QueryTableList:input_type -> hhdb.rpc_interface.QueryTableReq
	4,  // 7: hhdb.rpc_interface.RpcInterface.QueryTablePointCount:input_type -> hhdb.rpc_interface.QueryPointCountReq
	5,  // 8: hhdb.rpc_interface.RpcInterface.InsertPoints:input_type -> hhdb.rpc_interface.PointInfoListReq
	5,  // 9: hhdb.rpc_interface.RpcInterface.DelPoints:input_type -> hhdb.rpc_interface.PointInfoListReq
	5,  // 10: hhdb.rpc_interface.RpcInterface.UpdatePoints:input_type -> hhdb.rpc_interface.PointInfoListReq
	6,  // 11: hhdb.rpc_interface.RpcInterface.QueryPoints:input_type -> hhdb.rpc_interface.QueryPointInfoReq
	7,  // 12: hhdb.rpc_interface.RpcInterface.QueryPointIdListByNameList:input_type -> hhdb.rpc_interface.NameList
	8,  // 13: hhdb.rpc_interface.RpcInterface.QueryPointInfoList:input_type -> hhdb.rpc_interface.QueryRealtimeValueListReq
	9,  // 14: hhdb.rpc_interface.RpcInterface.UpdateRealtimeValueList:input_type -> hhdb.rpc_interface.UpdateRealtimeValueListReq
	8,  // 15: hhdb.rpc_interface.RpcInterface.QueryRealtimeValueList:input_type -> hhdb.rpc_interface.QueryRealtimeValueListReq
	10, // 16: hhdb.rpc_interface.RpcInterface.QueryHisRangeValueList:input_type -> hhdb.rpc_interface.QueryHisRangeValueListReq
	11, // 17: hhdb.rpc_interface.RpcInterface.QueryHisResampleValueList:input_type -> hhdb.rpc_interface.QueryHisResamplesValueListReq
	12, // 18: hhdb.rpc_interface.RpcInterface.QueryHisTimePointValueList:input_type -> hhdb.rpc_interface.QueryHisTimePointValueListReq
	13, // 19: hhdb.rpc_interface.RpcInterface.InsertHisValueList:input_type -> hhdb.rpc_interface.InsertHisValueListReq
	14, // 20: hhdb.rpc_interface.RpcInterface.Auth:output_type -> hhdb.rpc_interface.AuthReply
	15, // 21: hhdb.rpc_interface.RpcInterface.QueryErrMsg:output_type -> hhdb.rpc_interface.QueryErrMsgReply
	16, // 22: hhdb.rpc_interface.RpcInterface.InsertTable:output_type -> hhdb.rpc_interface.CommonReply
	16, // 23: hhdb.rpc_interface.RpcInterface.DelTable:output_type -> hhdb.rpc_interface.CommonReply
	16, // 24: hhdb.rpc_interface.RpcInterface.ClearTable:output_type -> hhdb.rpc_interface.CommonReply
	16, // 25: hhdb.rpc_interface.RpcInterface.UpdateTable:output_type -> hhdb.rpc_interface.CommonReply
	17, // 26: hhdb.rpc_interface.RpcInterface.QueryTableList:output_type -> hhdb.rpc_interface.QueryTableReply
	18, // 27: hhdb.rpc_interface.RpcInterface.QueryTablePointCount:output_type -> hhdb.rpc_interface.QueryPointCountReply
	16, // 28: hhdb.rpc_interface.RpcInterface.InsertPoints:output_type -> hhdb.rpc_interface.CommonReply
	16, // 29: hhdb.rpc_interface.RpcInterface.DelPoints:output_type -> hhdb.rpc_interface.CommonReply
	16, // 30: hhdb.rpc_interface.RpcInterface.UpdatePoints:output_type -> hhdb.rpc_interface.CommonReply
	19, // 31: hhdb.rpc_interface.RpcInterface.QueryPoints:output_type -> hhdb.rpc_interface.QueryPointInfoReply
	20, // 32: hhdb.rpc_interface.RpcInterface.QueryPointIdListByNameList:output_type -> hhdb.rpc_interface.QueryPointIdListByNameListReply
	19, // 33: hhdb.rpc_interface.RpcInterface.QueryPointInfoList:output_type -> hhdb.rpc_interface.QueryPointInfoReply
	16, // 34: hhdb.rpc_interface.RpcInterface.UpdateRealtimeValueList:output_type -> hhdb.rpc_interface.CommonReply
	21, // 35: hhdb.rpc_interface.RpcInterface.QueryRealtimeValueList:output_type -> hhdb.rpc_interface.ValueListReply
	22, // 36: hhdb.rpc_interface.RpcInterface.QueryHisRangeValueList:output_type -> hhdb.rpc_interface.QueryHisValueListReply
	22, // 37: hhdb.rpc_interface.RpcInterface.QueryHisResampleValueList:output_type -> hhdb.rpc_interface.QueryHisValueListReply
	21, // 38: hhdb.rpc_interface.RpcInterface.QueryHisTimePointValueList:output_type -> hhdb.rpc_interface.ValueListReply
	16, // 39: hhdb.rpc_interface.RpcInterface.InsertHisValueList:output_type -> hhdb.rpc_interface.CommonReply
	20, // [20:40] is the sub-list for method output_type
	0,  // [0:20] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_hhdb_rpc_interface_rpc_interface_proto_init() }
func file_hhdb_rpc_interface_rpc_interface_proto_init() {
	if File_hhdb_rpc_interface_rpc_interface_proto != nil {
		return
	}
	file_hhdb_rpc_interface_rpc_interface_mes_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hhdb_rpc_interface_rpc_interface_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hhdb_rpc_interface_rpc_interface_proto_goTypes,
		DependencyIndexes: file_hhdb_rpc_interface_rpc_interface_proto_depIdxs,
	}.Build()
	File_hhdb_rpc_interface_rpc_interface_proto = out.File
	file_hhdb_rpc_interface_rpc_interface_proto_rawDesc = nil
	file_hhdb_rpc_interface_rpc_interface_proto_goTypes = nil
	file_hhdb_rpc_interface_rpc_interface_proto_depIdxs = nil
}
